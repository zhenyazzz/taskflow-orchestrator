schemas:
  CreateUserRequest:
    type: object
    required:
      - username
      - password
      - email
    properties:
      username:
        type: string
      password:
        type: string
      email:
        type: string
        format: email
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
      roles:
        type: array
        items:
          type: string
          enum: [USER, ADMIN]

  UpdateUserRequest:
    type: object
    required:
      - username
      - password
      - email
    properties:
      username:
        type: string
      password:
        type: string
      email:
        type: string
        format: email
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string

  UserResponse:
    type: object
    required:
      - id
      - username
      - email
      - roles
      - status
      - createdAt
    properties:
      id:
        type: string
        format: uuid
      username:
        type: string
      email:
        type: string
        format: email
      firstName:
        type: string
      lastName:
        type: string
      phone:
        type: string
      roles:
        type: array
        items:
          type: string
          enum: [USER, ADMIN]
      status:
        type: string
        enum: [ACTIVE, INACTIVE, PENDING]
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time

getAllUsers:
  summary: Get all users
  description: Returns a list of all users
  security:
    - bearerAuth: []
  responses:
    '200':
      description: A list of users
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/schemas/UserResponse'
    '403':
      $ref: '../shared/responses.yaml#/ForbiddenError'

getUserById:
  summary: Get user by ID
  description: Returns a single user by their ID
  security:
    - bearerAuth: []
  parameters:
    - in: path
      name: id
      schema:
        type: string
        format: uuid
      required: true
      description: ID of the user to retrieve
  responses:
    '200':
      description: User object
      content:
        application/json:
          schema:
            $ref: '#/schemas/UserResponse'
    '403':
      $ref: '../shared/responses.yaml#/ForbiddenError'
    '404':
      $ref: '../shared/responses.yaml#/NotFoundError'

createUser:
  summary: Create a new user
  description: Creates a new user in the system
  security:
    - bearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/CreateUserRequest'
  responses:
    '201':
      description: User created successfully
      content:
        application/json:
          schema:
            $ref: '#/schemas/UserResponse'
    '400':
      $ref: '../shared/responses.yaml#/BadRequestError'
    '403':
      $ref: '../shared/responses.yaml#/ForbiddenError'
    '409':
      description: User with provided username or email already exists

updateUser:
  summary: Update an existing user
  description: Updates an existing user in the system by their ID
  security:
    - bearerAuth: []
  parameters:
    - in: path
      name: id
      schema:
        type: string
        format: uuid
      required: true
      description: ID of the user to update
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '#/schemas/UpdateUserRequest'
  responses:
    '200':
      description: User updated successfully
      content:
        application/json:
          schema:
            $ref: '#/schemas/UserResponse'
    '400':
      $ref: '../shared/responses.yaml#/BadRequestError'
    '403':
      $ref: '../shared/responses.yaml#/ForbiddenError'
    '404':
      $ref: '../shared/responses.yaml#/NotFoundError'

deleteUser:
  summary: Delete a user
  description: Deletes a user from the system by their ID
  security:
    - bearerAuth: []
  parameters:
    - in: path
      name: id
      schema:
        type: string
        format: uuid
      required: true
      description: ID of the user to delete
  responses:
    '204':
      description: User deleted successfully
    '403':
      $ref: '../shared/responses.yaml#/ForbiddenError'
    '404':
      $ref: '../shared/responses.yaml#/NotFoundError'
