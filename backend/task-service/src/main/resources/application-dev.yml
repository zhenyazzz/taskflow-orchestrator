server:
  port: 8083

spring:
  application:
    name: task-service

  data:
    mongodb:
      uri: mongodb://root:password@localhost:27017/taskdb?authSource=admin
      database: taskdb
      auto-index-creation: true

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: task-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer

minio:
  endpoint: http://localhost:9000
  access-key: minio
  secret-key: minio123
  bucket-name: taskflow-attachments

#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka/
#    registerWithEureka: true
#    fetchRegistry: true
#  instance:
#    instance-id: ${spring.application.name}:local:${random.value}
#    preferIpAddress: true
#    hostname: host.docker.internal
#    ip-address: host.docker.internal
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: http://localhost:8761/eureka/
#    registerWithEureka: true
#    fetchRegistry: true
#  instance:
#    instance-id: ${spring.application.name}:${spring.application.name}:${server.port}
#    hostname: localhost
#    preferIpAddress: true

eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
  instance:
    hostname: localhost
    preferIpAddress: true

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus